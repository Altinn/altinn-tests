name: k6 Load Test

on:
  push:
    branches:
      - '**'

jobs:
  run-test:
    runs-on: ubuntu-latest
    container: docker://golang:1.23-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install xk6
        run: go install go.k6.io/xk6/cmd/xk6@latest

      - name: Build xk6-counter binary
        working-directory: ./performance-tests/test/src
        run: xk6 build --with github.com/avitalique/xk6-file@latest

      - name: Run k6 to generate tokens
        working-directory: ./performance-tests/test/src
        run: ./k6 run generate-tokens.js
        env:
          env: ${{ secrets.YTENVIRONMENT }}
          tokengenuser: ${{ secrets.TOKENGENUSER }}
          tokengenuserpwd: ${{ secrets.TOKENGENPWD }}
          K6_LOG_OUTPUT: stdout

      - name: Setup K6
        uses: grafana/setup-k6-action@v1

      - name: Run local k6 test
        uses: grafana/run-k6-action@v1  
        with: 
          path: performance-tests/test/src/test.js
          #flags: --vus=30 --duration=5m
        env:
          K6_WEB_DASHBOARD: true 
          K6_WEB_DASHBOARD_EXPORT: html-report.html
          YTENVIRONMENT: ${{ secrets.YTENVIRONMENT }}
          tokengenuser: ${{ secrets.TOKENGENUSER }}
          tokengenuserpwd: ${{ secrets.TOKENGENPWD }}
          serviceowner: ${{ secrets.OWNER }}
          K6_LOG_OUTPUT: stdout
          K6_SETUP_TIMEOUT: 5m

      - name: Upload summary html report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: summary-html
          path: summary.html
      - name: Upload extended html report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: extended-html
          path: html-report.html
